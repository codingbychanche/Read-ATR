* DIRECTORY DUMP* SUBROTINE FUER DISKRESORCE TOOL ** EQUATES FUER EINGABE/AUSGABE DISK*DUNIT	EQU $301    LAUFWERK NUMMERDCCOM	EQU $302    COMMANDODBUFL	EQU $304    BUFFER LOW/HIDBUFH	EQU $305   DAUX1	EQU $30A    SEKTOR NR. LOWDAUX2	EQU $30B    SEKTOR NR. HIDSINV	EQU $E453   EINGABE/AUSGABESIOV	EQU $E459DDIVEC	EQU $300    GERAET/DISK/CASSDBYT	EQU 776     ANZAHL DER BYTES** EQUATES ZUM OEFFNEN EINES KANALES*ICCOM	EQU $342      KOMMANDO BYTEICBAL	EQU $344	     DATA BUFFER LOWICBAH	EQU $345	     DATA BUFFER HIICBALL	EQU $348	     BUFFERLAENGE LOICBALH	EQU $349      BUFFERLAENGE HIICAX1	EQU $34A	     ZUSATZBYTE 1ICAX2	EQU $34B	     ZUSATZBYTE 2CIOV	EQU $E456     CIO EINSPRUNG.** VARIABELN*BUFFER	EQU $B000BUFFL	EQU 206BUFFH    EQU 207EINTRAG	EQU $B000+1024ANFANG	EQU 1551       ERSTER EINTRAGENDE	EQU 1552       LETZTER EINTRAGX	EQU $55        SPALTENY	EQU $54        ZEILENEOL	EQU $9B        CARIAGE RETURNFLAG	EQU 1550       TESTFLAG** EQUATES FUER ZAHLENVERARBEITUNG*FRO1	EQU 212FRO2	EQU 213INBUFF	EQU 243FASC	EQU 55526IFP	EQU $D9AA** STRINGS*	ORG $A800	JMP START*STATUS	DFB $7D	ASC "-DIRECTORY ANZEIGEN-"	DFB EOL*EIN1	DFB $1D	ASC "1.Eintrag      :1"	DFB EOL*EIN2	DFB $1D	ASC "Letzter Eintrag:64"	DFW EOL*KOPF	DFB $1D	ASC "FN|STATUS   |NAME   |EXT|START|LAENGE "		DFB 13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13 	DFW EOL*UNUSED	ASC "Unbenutzt "DELETET	ASC "Geloescht "AKTIV	ASC "Aktiv     "BLANK	ASC "                                      "	DFW EOL*FEHLER	ASC "DISK ERROR-     "	DFW EOL*------------------------------------* PROGRAMMBEGINN-MACRODEFFINATION*POS	MACRO XPOS,YPOS	LDA #XPOS	STA X	LDA #XPOS/256 	STA X+1	LDA #YPOS	STA Y		MEND*------------------------------------* EINGABE 1. UND LETZTER ZU ZEIGENDER* FILEEINTRAG.*START	LDA #STATUS:L  UNTERPROGRAMM	LDY #STATUS:H  NAHME AUS-	JSR PRINT      GEBEN.	LDA #EIN1:L	LDY #EIN1:H	JSR PRINT	LDA #ANFANG:L  BUFFADR LOW+HI	LDY #ANFANG:H	JSR GET        GET CHARACTER.	LDA #EIN2:L	LDY #EIN2:H	JSR PRINT	LDA #ENDE:L	LDY #ENDE:H	JSR GET        GET CAHRACTER.*------------------------------------* SEKTOR 361-362 LESEN* (KOPF AUSGEBEN)*	LDA #BUFFER:L	STA BUFFL	LDA #BUFFER:H	STA BUFFH*	LDA #KOPF:L	LDY #KOPF:H	JSR PRINT* 	LDA #1	STA DUNIT	LDA #'R	LDA #361:L	STA DAUX1	LDA #361:H	STA DAUX2 	LDA #BUFFER:L	STA DBUFL	LDA #BUFFER:H	STA DBUFH*LESEN 	JSR DSINV	BMI ERROR	CLC	LDA DAUX1	ADC #1	STA DAUX1	LDA DBUFL	ADC #128	STA DBUFL	LDA DBUFH	ADC #0	STA DBUFH	LDA DAUX1	CMP #112	BNE LESEN	JMP INIT    AUSGABE BEGINNT.*------------------------------------* FEHLER BEIM LESEN VON DISK* -ERRORCODE AUSGEBEN*ERROR	LDX #0        TEXT DISK ERROR'KOPIE	LDA FEHLER,X  IN EINTRAG 	STA EINTRAG,X KOPIEREN.	INX	CPX #20	BNE KOPIE*	STY FRO1	LDA #0	STA FRO2	JSR IFP	JSR FASC	LDX #12	JSR NUMMER		*	LDA #EINTRAG:L	LDY #EINTRAG:H	JSR PRINT		RTS*------------------------------------* EINGABE DES ERSTEN UND LETZTEN* ZU ZEIGENDEN FILEEINTRAGES*INIT	LDX #1	LDA #1	STA ANFANG   ERSTER EINTRAG.	LDA #7	STA ENDE     LETZTER EINTRAG.	LDA ANFANG   WENN 1.EINTRAG=1	CMP #1	    DANN AUSGABE			BNE RECHNE   SONST EINTRAG         JMP BEGINN   BERECHNEN.*------------------------------------* ADRESSE DES ERSTEN EINTRAGES * ERRECHENEN.RECHNE	CLC	LDA BUFFL	ADC #16	STA BUFFL	LDA BUFFH	ADC #0	STA BUFFH	INX	CPX ANFANG X=ANFANG?	BNE RECHNE*------------------------------------* STRING-EINTRAG LOESCHEN*BEGINN	LDA #0         FLAG ZUREUCK	STA FLAG       AUF 0.*	LDX #0LOOP	LDA BLANK	STA EINTRAG,X	INX	CPX #50	BNE LOOP	*------------------------------------* FILENUMMER AUSGEBEN	LDA ANFANG     LOWBYTE FILENR	STA FRO1		  	LDA #0	      HIBYTE IST 	STA FRO2       NICHT NOETIG.*	JSR IFP	JSR FASC	LDX #0	JSR NUMMER*------------------------------------* ANALYSIERE FILEEINTRAG* (AUSGABE)** IST FILE BENUTZT ?*	LDX #3	LDY #0*	LDA (BUFFL),Y	CMP #0	BNE NOTUNUS** FILE IST UNUSED !*UNUS	LDA UNUSED,Y	STA EINTRAG,X	INY	INX	CPY #10	BNE UNUS	JMP FERTIG*------------------------------------* IST FILE GELOESCHT*NOTUNUS	LDY #0	LDA (BUFFL),Y	BIT %00000100	BNE NODELET** FILEEINTRAG IST GELOESCHT*DELET	LDA DELETET,Y	STA EINTRAG,X	INX		INY	CPY #10	BNE DELET	LDA #1      FLAG-1/=FILENAME	STA FLAG    INVERS AUSGEBEN.	JMP FERTIG*------------------------------------* IST FILE AKTIV ?*NODELET	LDY #0		LDA (BUFFL),Y	BIT %000000010	BNE FERTIG** FILEEINTRAG IST AKTIV*AKT	LDA AKTIV,Y	STA EINTRAG,X	INX	INY	CPY #10	BNE AKT*------------------------------------* IST FILE GESPERRT ?*FERTIG	LDY #0		LDX #12	LDA (BUFFL),Y	CMP #'b	BNE NOPROT** FILE IST GESPERRT*	LDA #'*      STERN IN EINTRAG	STA EINTRAG,X*------------------------------------* FILENAME+EXTENTER AUSGEBEN*NOPROT	LDY #5	LDX #13*FNAME	LDA (BUFFL),Y AUSGABE ERFOLGT 	STA EINTRAG,X	INY	INX	CPX #24	BNE FNAME	JMP STARTS    FERTIG.*------------------------------------* STARTSECTOR UND LAENGE ERMITTELN*STARTS	LDY #3	LDA (BUFFL),Y LOWBYTE STARTS.	STA FRO1	INY	LDA (BUFFL),Y HIBYTE STARTS.	STA FRO2	JSR IFP       BIN.->IFP	JSR FASC      IFP.->ASCII	LDX #26	JSR NUMMER    ZAHL IN EINTRAG* LAENGE:	LDY #1	LDA (BUFFL),Y LOWBYTE LAENGE	STA FRO1	INY	LDA (BUFFL),Y HIBYTE LAENGE	STA FRO2	JSR IFP	JSR FASC	LDX #32	JSR NUMMER*	LDX #37       CARRIAGE	LDA #EOL      RETURN.	STA EINTRAG,X*------------------------------------* NAECHSTEN DIRECTORYEINTRAG* AUSGEBEN** PRUEFE OB EINTRAG$ INVERTIEREN	LDA FLAG	CMP #1	BNE AUSGABE* INVERTIERE EINTRAG$	LDX #0	     INVERS	LDA EINTRAG,X	ORA #$80	STA EINTRAG,X	INX	CPX #37	BNE INVERS*AUSGABE	LDA #EINTRAG:L	LDY #EINTRAG:H	JSR PRINT*------------------------------------* ADRESSE DES NAECHSTEN EINTRAGES* ERMITTELN.*	CLC	LDA BUFFL	ADC #16	STA BUFFL*	LDA BUFFH	ADC #0	STA BUFFH* LETZTER EINTRAG?	LDA ANFANG	CMP ENDE	BNE WEITER	RTS	   ENDE.(ALLE EINTR-*		   RAEGE AUSGEGEBEN)	WEITER   INC ANFANG		JMP BEGINN*------------------------------------* UNTERPROGRAMM:* ZAHL IN -EINTRAG KOPIEREN* IN X -> POSITION DES 1. ZEICHENS IN*         EINTRAG* NUMMER	LDY #0ZAHL	LDA (INBUFF),Y	BMI STOP      ZEICHEN INVERS.	STA EINTRAG,X	INY	INX	BNE ZAHL*STOP     CLC           LETZTE ZIFFER*                      NICHT INVERS	SBC #127      AUSGEBEN.	STA EINTRAG,X	RTS*------------------------------------* UNTERPROGRAMM ZUM AUSDRUCK EINES* STRINGS:LSB IN A* STRINGS:MSB IN Y*PRINT	LDX #0	     IOCB#0	STA ICBAL,X   ZEIGER AUF 	TYA           STRING 	STA ICBAH,X   EINTRAGEN (MSB)	LDA #80       STRING LAENGE	STA ICBALL,X	LDA #0	STA ICBALH,X  MSB LAENGE=0	LDA #9        BEFEL PUT TEXT	STA ICCOM,X	JSR CIOV	     CIO AUFRUF	RTS*------------------------------------* UNTERPROGRAMM GET STRING,ADRESSE DES* STRINGS:LSB IN A* STRINGS:MSB IN Y*GET	LDX #0	     IOCB#0	STA ICBAL,X   ZEIGER AUF 	TYA           STRING 	STA ICBAH,X   EINTRAGEN (MSB)	LDA #1        STRING LAENGE	STA ICBALL,X	LDA #0	STA ICBALH,X  MSB LAENGE=0	LDA #7        BEFEL GET TEXT	STA ICCOM,X	JSR CIOV	     CIO AUFRUFEND	RTSÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ